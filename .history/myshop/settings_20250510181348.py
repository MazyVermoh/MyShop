"""
Django settings for myshop project.
Generated by 'django-admin startproject' using Django 5.1.7.
"""

from pathlib import Path
import environ

env = environ.Env()
environ.Env.read_env(env_file=os.path.join(BASE_DIR, '.env'))

# ──────────────────────────────────────────────────────────────────────────────
# Paths & Base
# ──────────────────────────────────────────────────────────────────────────────
BASE_DIR = Path(__file__).resolve().parent.parent

# ──────────────────────────────────────────────────────────────────────────────
# Security
# ──────────────────────────────────────────────────────────────────────────────
SECRET_KEY = env('DJANGO_SECRET_KEY')
DEBUG = env.bool('DJANGO_DEBUG', default=False)
ALLOWED_HOSTS = env.list('abuzada.store')

# ──────────────────────────────────────────────────────────────────────────────
# Applications
# ──────────────────────────────────────────────────────────────────────────────
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "checkout",  # оплата, рассылка
    "store",     # каталог и заказы
    "accounts",  # кастомная модель пользователя
]

# ──────────────────────────────────────────────────────────────────────────────
# Middleware / URLs / WSGI
# ──────────────────────────────────────────────────────────────────────────────
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "myshop.urls"
WSGI_APPLICATION = "myshop.wsgi.application"

# ──────────────────────────────────────────────────────────────────────────────
# Templates
# ──────────────────────────────────────────────────────────────────────────────
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],  # <project_root>/templates/
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "cart.context_processors.cart_totals",
            ],
        },
    },
]

# ──────────────────────────────────────────────────────────────────────────────
# Database
# ──────────────────────────────────────────────────────────────────────────────
DATABASES = {
    'default': env.db()       # подтянет DATABASE_URL
}

# ──────────────────────────────────────────────────────────────────────────────
# Password validation
# ──────────────────────────────────────────────────────────────────────────────
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# ──────────────────────────────────────────────────────────────────────────────
# Internationalization
# ──────────────────────────────────────────────────────────────────────────────
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# ──────────────────────────────────────────────────────────────────────────────
# Static & Media
# ──────────────────────────────────────────────────────────────────────────────
STATIC_URL = "/static/"
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "collected_static"

MEDIA_URL  = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# ──────────────────────────────────────────────────────────────────────────────
# Custom user model
# ──────────────────────────────────────────────────────────────────────────────
AUTH_USER_MODEL = "accounts.User"

# ──────────────────────────────────────────────────────────────────────────────
# Login / Logout redirects
# ──────────────────────────────────────────────────────────────────────────────
LOGIN_REDIRECT_URL  = "/"
LOGOUT_REDIRECT_URL = "home"

# ──────────────────────────────────────────────────────────────────────────────
# Cart session key
# ──────────────────────────────────────────────────────────────────────────────
CART_SESSION_KEY = "cart"

# ──────────────────────────────────────────────────────────────────────────────
# Email (SMTP) configuration
# ──────────────────────────────────────────────────────────────────────────────
EMAIL_BACKEND       = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST          = "smtp.mail.ru"           # smtp.mail.ru или smtp.yandex.ru
EMAIL_PORT          = 587                      # 587 для TLS, 465 для SSL
EMAIL_USE_TLS       = True                     # True если порт 587
# EMAIL_USE_SSL     = True                     # вместо TLS, если порт 465

EMAIL_HOST_USER     = "Abuzada.store@mail.ru"
EMAIL_HOST_PASSWORD = "BMp4zzr3iB2EuBVUcvPK"

DEFAULT_FROM_EMAIL  = EMAIL_HOST_USER

# URL вашего сайта — для ссылок в письмах
SITE_URL = "http://localhost:8000"             # в продакшене — ваш домен

# Админские адреса для уведомлений о новых заказах
ADMINS = [
    ("Администратор", "Abuzada.store@mail.ru"),
]

# ──────────────────────────────────────────────────────────────────────────────
# DaData — подсказки адресов
# ──────────────────────────────────────────────────────────────────────────────
DADATA_API_KEY = "852cd2797dfa7726a7bcc6b792d862c38735b269"
# Если переключитесь на промо‑тариф — добавьте ещё SECRET KEY:
# DADATA_SECRET = "ваш_secret"

# ──────────────────────────────────────────────────────────────────────────────
# SMS / Yookassa settings (если нужны)
# ──────────────────────────────────────────────────────────────────────────────
# YOOKASSA_SHOP_ID    = "ваш_Shop_ID"
# YOOKASSA_SECRET_KEY = "ваш_SECRET_KEY"

# ──────────────────────────────────────────────────────────────────────────────
# Authentication backends
# ──────────────────────────────────────────────────────────────────────────────
AUTHENTICATION_BACKENDS = [
    "accounts.backends.EmailPhoneUsernameBackend",
    "django.contrib.auth.backends.ModelBackend",
]

# ──────────────────────────────────────────────────────────────────────────────
# Default auto field
# ──────────────────────────────────────────────────────────────────────────────
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Платежный шлюз
# ──────────────────────────────────────────────────────────────────────────────
YOOKASSA_SHOP_ID    = "ваш_настоящий_Shop_ID"
YOOKASSA_SECRET_KEY = "ваш_настоящий_секретный_ключ"
